// --- Componente: Portafotos ---
@use 'variables' as *;
@use 'sass:color';
@use 'mixins' as *;

.portafotos {
    // 1. Rediseño del marco: ahora es de "madera" con un gradiente
    background: linear-gradient(145deg, color.adjust($borde-portafotos, $lightness: 5%), color.adjust($borde-portafotos, $lightness: -8%));
    box-shadow: 0 8px 16px $color-sombra-suave, 0 4px 8px rgba(0,0,0,0.1), inset 0 0 10px rgba(0,0,0,0.3);
    padding: 0.75rem;
    border-radius: $radio-borde-md; // Bordes más suaves
    width: 180px;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease; // Transición más rápida
    cursor: pointer;
    transform-style: preserve-3d; // Habilita el espacio 3D para los hijos

    // --- Animación de entrada ---
    opacity: 0; // Inicialmente oculto
    // La rotación inicial se combina con la animación
    transform: translateY(20px) rotate(var(--rotate, 0deg));
    animation: fadeIn 0.6s ease-out forwards; // Aplicamos la animación
    
    // Aplicamos el hover solo cuando no se está arrastrando un elemento
    // SortableJS añade la clase 'sortable-active' al body durante el drag.
    body:not(.sortable-active) &:hover {
        // 2. ¡Efecto 3D! El marco se levanta y rota ligeramente en el eje Y
        transform: translateY(-12px) scale(1.08) rotateY(10deg) rotate(var(--rotate, 0deg));
        box-shadow: 0 20px 30px $color-sombra-fuerte, 0 8px 12px rgba(0,0,0,0.2), inset 0 0 10px rgba(0,0,0,0.3);
        z-index: 10;

        // La imagen dentro del marco se agranda
        .portafotos__imagen {
            transform: scale(1.05);
        }
    }

    // Usamos un bucle @each para generar las rotaciones. ¡Mucho más limpio!
    @each $child, $rotation in $rotaciones-portafotos {
        &:nth-child(#{$child}) {
            --rotate: #{$rotation};
            transform: rotate(var(--rotate));
        }
    }

    // Contenedor de la imagen para el efecto de cristal
    &__imagen-container {
        position: relative;
        overflow: hidden; // Oculta el zoom de la imagen
        border-radius: 2px; // Bordes internos suaves
        box-shadow: inset 0 0 15px rgba(0,0,0,0.4); // Sombra interna para dar profundidad

        // 3. Efecto de cristal sobre la imagen
        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 50%);
            pointer-events: none; // Permite hacer clic a través del cristal
        }
    }

    &__imagen {
        width: 100%;
        height: auto;
        display: block;
        transition: transform 0.3s ease; // Transición más rápida
    }

    &__caption {
        position: relative; // Para posicionar los "tornillos"
        // 1. Apariencia de placa de latón
        background: linear-gradient(145deg, color.adjust($borde-portafotos, $lightness: 15%), color.adjust($borde-portafotos, $lightness: -15%));
        color: color.adjust($color-titulo, $lightness: -15%); // Un marrón más oscuro para el texto
        font-family: 'Times New Roman', Times, serif; // Una fuente más clásica y elegante
        font-size: 0.75rem; // Un poco más pequeño, más delicado
        font-style: normal; // Quitamos la cursiva para un look más formal
        text-shadow: 1px 1px 0px rgba(255,255,255,0.2); // Ligero brillo para efecto grabado
        
        // 2. Forma y posicionamiento
        margin-top: 0.75rem; // Un poco más de espacio
        padding: 4px 12px; // Más padding horizontal para los tornillos
        border-radius: 2px;
        display: inline-block;
        
        // 3. Efecto 3D de la placa
        box-shadow: 0 1px 2px rgba(0,0,0,0.5), inset 0 0 1px rgba(255,255,255,0.5);

        // 4. ¡Tornillos decorativos!
        &::before, &::after {
            content: '';
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 4px;
            height: 4px;
            background-color: color.adjust($color-titulo, $lightness: -20%);
            border-radius: 50%;
            box-shadow: inset 0 0 1px rgba(255,255,255,0.3);
        }
        &::before { left: 4px; }
        &::after { right: 4px; }
    }

    @media (max-width: $breakpoint-tablet) {
        // Calculamos el ancho para que quepan 2 por fila, considerando el gap
        width: calc(50% - 0.5rem);
        border-width: 0.75rem;
        padding: 0.5rem;

        // Reseteamos las rotaciones individuales en móvil
        &:nth-child(n) {
            transform: translateY(0); // Mantenemos el translateY de la animación
        }

        &:hover {
            transform: translateY(-5px) scale(1.03); // Efecto hover más sutil
        }
    }

    // --- Accesibilidad: Respetar la preferencia de movimiento reducido ---
    @media (prefers-reduced-motion: reduce) {
        transition: none;
        animation: none;
        opacity: 1; // Mostramos las fotos directamente
        transform: rotate(var(--rotate, 0deg)); // Mantenemos la rotación base

        &:hover {
            transform: scale(1.03) rotate(var(--rotate, 0deg)); // Un hover más simple
        }
    }
}

// --- Estilos para la funcionalidad de Drag and Drop (SortableJS) ---

// Estilo para el elemento que se está arrastrando
.portafotos-drag {
    opacity: 0.9;
    transform: translateY(-12px) scale(1.08) rotate(5deg) !important; // Forzamos que se mantenga elevado y lo rotamos
    box-shadow: 0 25px 40px rgba(0,0,0,0.5); // Sombra más pronunciada al arrastrar
    z-index: 9999; // Nos aseguramos de que esté por encima de todo
}

// Estilo para el "fantasma" o marcador de posición
.portafotos-ghost {
    opacity: 0.4;
    background: color.adjust($borde-portafotos, $lightness: -10%);
    border-radius: $radio-borde-md;
    // Hacemos que el contenido del fantasma sea invisible
    * { visibility: hidden; }
}